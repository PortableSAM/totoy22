{"version":3,"sources":["component/Nav/Home.js","component/Nav/About.js","component/MovieApp/lib/Key.js","component/MovieApp/lib/MainURL.js","component/MovieApp/lib/TargetDt.js","component/MovieApp/D/DList.js","component/MovieApp/D/Daily.js","component/MovieApp/W/WeekList.js","component/MovieApp/W/Week.js","component/Nav/Project.js","App.js","serviceWorker.js","index.js"],"names":["Home","React","Component","About","Key","Main_API","TargetDt","moment","subtract","format","Dlilst","title","Open","rank","people","point","className","href","encodeURI","target","rel","DailyMovie","state","daily","dList","isLoading","getDailyList","a","url","MainURL","Axios","get","then","res","data","setState","boxOfficeResult","dailyBoxOfficeList","console","log","this","boxofficeType","showRange","map","movie","index","id","key","movieNm","openDt","audiAcc","showCnt","WeekList","open","TargetWt","WeeklyMovie","weekly","wList","getWeeklyList","weeklyBoxOfficeList","length","weeklyMovie","Project","props","activeTab","onChange","tabId","ripple","col","toggleCategori","App","scroll","to","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d4485934.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default class Home extends React.Component {\r\n  render() {\r\n    return <div>Home</div>;\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class About extends React.Component {\r\n  render() {\r\n    return <div>About</div>;\r\n  }\r\n}\r\n","const Key = \"343e4f91240236454d41bcd82ac101cd\";\r\n\r\nexport default Key;\r\n","const Main_API =\r\n  \"https://www.kobis.or.kr/kobisopenapi/webservice/rest/boxoffice\";\r\n\r\nexport default Main_API;\r\n","import moment from \"moment\";\r\n\r\nconst TargetDt = moment()\r\n  .subtract(1, \"d\")\r\n  .format(\"YYYYMMDD\");\r\n\r\nexport default TargetDt;\r\n","import React from \"react\";\r\n\r\nexport default function Dlilst({ title, Open, rank, people, point }) {\r\n  return (\r\n    <div className=\"movie\">\r\n      <div className=\"data\">\r\n        <a\r\n          href={`https://search.naver.com/search.naver?${encodeURI(\r\n            `sm=top_hty&fbm=1&ie=utf8&query=${title}`\r\n          )}`}\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          <h3>순 위 : {rank}</h3>\r\n          <h3>영화제목 : {title}</h3>\r\n          <h3>개봉일자 : {Open}</h3>\r\n          <h4>상영횟수 : {point}</h4>\r\n          <h4>누적관객 : {people}명</h4>\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Axios from \"axios\";\r\n\r\nimport { MainURL, Key, TargetDt } from \"../lib\";\r\n\r\nimport DList from \"./DList\";\r\nexport default class DailyMovie extends React.Component {\r\n  state = {\r\n    daily: \"\",\r\n    dList: [],\r\n    isLoading: true\r\n  };\r\n\r\n  getDailyList = async () => {\r\n    const url = `${MainURL}/searchDailyBoxOfficeList.json?key=${Key}&targetDt=${TargetDt}`;\r\n\r\n    await Axios.get(url)\r\n      .then(res => res.data)\r\n      .then(data => {\r\n        this.setState({\r\n          daily: data.boxOfficeResult,\r\n          dList: data.boxOfficeResult.dailyBoxOfficeList,\r\n          isLoading: false\r\n        });\r\n\r\n        console.log(this.state.daily);\r\n        console.log(this.state.dList);\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getDailyList();\r\n  }\r\n\r\n  render() {\r\n    const { daily, dList, isLoading } = this.state;\r\n    return (\r\n      <div>\r\n        {isLoading ? (\r\n          <div className=\"loader\">\r\n            <span className=\"loader_text\">\r\n              <h2>Data Loading</h2>\r\n            </span>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <div className=\"type\">\r\n              <h3>{daily.boxofficeType}</h3>\r\n              <h5>{daily.showRange}</h5>\r\n            </div>\r\n            <div className=\"movies\">\r\n              {dList.map((movie, index) => (\r\n                <DList\r\n                  id={movie.id}\r\n                  key={index}\r\n                  title={movie.movieNm}\r\n                  Open={movie.openDt}\r\n                  rank={movie.rank}\r\n                  people={movie.audiAcc}\r\n                  point={movie.showCnt}\r\n                />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function WeekList({ title, open, rank, people, point }) {\r\n  return (\r\n    <div className=\"movie\">\r\n      <div className=\"data\">\r\n        <a\r\n          href={`https://search.naver.com/search.naver?${encodeURI(\r\n            `sm=top_hty&fbm=1&ie=utf8&query=${title}`\r\n          )}`}\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          <h3>순 위 : {rank}</h3>\r\n          <h3>영화제목 : {title}</h3>\r\n          <h3>개봉일자 : {open}</h3>\r\n          <h4>상영횟수 : {point}</h4>\r\n          <h4>누적관객 : {people}명</h4>\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Axios from \"axios\";\r\n\r\nimport { MainURL, Key, TargetWt } from \"../lib\";\r\nimport WeekList from \"./WeekList\";\r\nconsole.log(TargetWt);\r\nexport default class WeeklyMovie extends React.Component {\r\n  state = {\r\n    weekly: \"\",\r\n    wList: [],\r\n    isLoading: true\r\n  };\r\n\r\n  getWeeklyList = async () => {\r\n    const url = `${MainURL}/searchWeeklyBoxOfficeList.json?key=${Key}&targetDt=${TargetWt}`;\r\n    await Axios.get(url)\r\n      .then(res => res.data)\r\n      .then(data => {\r\n        this.setState({\r\n          weekly: data.boxOfficeResult,\r\n          wList: data.boxOfficeResult.weeklyBoxOfficeList,\r\n          isLoading: false\r\n        });\r\n        console.log(this.state.weekly);\r\n        console.log(this.state.wList);\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getWeeklyList();\r\n  }\r\n\r\n  render() {\r\n    const { weekly, wList, isLoading } = this.state;\r\n    if (wList.length > 0) {\r\n      return (\r\n        <div>\r\n          {isLoading ? (\r\n            <div className=\"loader\">\r\n              <span className=\"loader_text\">\r\n                <h2>Data Loading</h2>\r\n              </span>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <div>\r\n                <h3>{weekly.boxofficeType}</h3>\r\n                <h5>{weekly.showRange}</h5>\r\n              </div>\r\n              <div className=\"wMovies\">\r\n                {wList.map((weeklyMovie, index) => (\r\n                  <WeekList\r\n                    id={weeklyMovie.id}\r\n                    key={index}\r\n                    title={weeklyMovie.movieNm}\r\n                    open={weeklyMovie.openDt}\r\n                    rank={weeklyMovie.rank}\r\n                    people={weeklyMovie.audiAcc}\r\n                    point={weeklyMovie.showCnt}\r\n                  />\r\n                ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          {isLoading ? (\r\n            <div className=\"loader\">\r\n              <span className=\"loader_text\">\r\n                <h2>Data Loading</h2>\r\n              </span>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <h3>{weekly.boxofficeType}</h3>\r\n              <h3>Gathering data</h3>\r\n            </div>\r\n          )}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Tabs, Tab, Grid, Cell } from \"react-mdl\";\r\n\r\nimport Daily from \"../MovieApp/D/Daily\";\r\nimport Weekly from \"../MovieApp/W/Week\";\r\n\r\nexport default class Project extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { activeTab: 1 };\r\n  }\r\n  toggleCategori() {\r\n    if (this.state.activeTab === 1) {\r\n      return (\r\n        <div>\r\n          <Daily />\r\n        </div>\r\n      );\r\n    } else if (this.state.activeTab === 0) {\r\n      return (\r\n        <div>\r\n          <Weekly />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"categori_tabs\">\r\n        <Tabs\r\n          activeTab={this.state.activeTab}\r\n          onChange={tabId => this.setState({ activeTab: tabId })}\r\n          ripple\r\n        >\r\n          <Tab>Weekly</Tab>\r\n          <Tab>Daily</Tab>\r\n        </Tabs>\r\n        <Grid>\r\n          <Cell col={12}>\r\n            <div className=\"project_content\">{this.toggleCategori()}</div>\r\n          </Cell>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport { Layout, Header, Navigation, Drawer, Content } from \"react-mdl\";\nimport { BrowserRouter as Router, Link, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport { Home, About, Project } from \"./component/Nav\";\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <Router>\n        <div>\n          <Layout>\n            <Header title=\"Build App\" scroll>\n              <Navigation>\n                <Link to=\"/\">Home</Link>\n                <Link to=\"/about\">About</Link>\n                <Link to=\"/project\">Project</Link>\n              </Navigation>\n            </Header>\n            <Drawer title=\"Build App\">\n              <Link to=\"/\">Home</Link>\n              <Link to=\"/about\">About</Link>\n              <Link to=\"/project\">Project</Link>\n            </Drawer>\n            <Content>\n              <Route exact path=\"/\" component={Home} />\n              <Route path=\"/about\" component={About} />\n              <Route path=\"/project\" component={Project} />\n            </Content>\n          </Layout>\n        </div>\n      </Router>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n//import './index.css';\nimport App from \"./App\";\nimport \"react-mdl/extra/material.css\";\nimport \"react-mdl/extra/material.js\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}